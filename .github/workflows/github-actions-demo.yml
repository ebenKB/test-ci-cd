name: Test CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --silent
      # - name: Run Test
      #   run: npm test --if-present
      #   env:
      #     CI: true

      - name: Generate build
        run: yarn build --silent

      # Share artifact inside workflow
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      
      # deploy the files to the server
      - name: Get copy of repo
        uses: actions/checkout@master
      - name: Get the artifact
        uses: actions/download-artifact@v1
        with:
          name: build

      # copy build files to the remote server
      - name: copy file to server via ssh
        uses: appleboy/scp-action@master
        with: 
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "build/*"
          target: ${{ secrets.PROJECT_PATH }}
          # target: "smsportal"